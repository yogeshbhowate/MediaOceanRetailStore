apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.akhikhl.gretty'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-core:4.1.6.RELEASE'
	compile 'org.springframework:spring-web:4.1.6.RELEASE'
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
  	compile 'org.springframework:spring-jdbc:4.1.6.RELEASE'
	compile 'javax.servlet:jstl:1.2'
 	
  	compile 'org.hibernate:hibernate-core:4.3.6.Final'
  	compile 'org.hibernate:hibernate-entitymanager:4.3.6.Final'
  	compile 'com.h2database:h2:1.3.148'
	compile 'org.springframework.data:spring-data-jpa:1.10.2.RELEASE'
	 compile 'org.springframework:spring-tx:4.1.6.RELEASE'
	 
	 compile 'com.fasterxml.jackson.core:jackson-core:2.5.1'
	 compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
	 compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.1'
	 
	 testCompile 'junit:junit:4.12'
	 testCompile 'org.mockito:mockito-core:1.9.5'
	 testCompile 'org.springframework:spring-test:4.1.6.RELEASE'
	 testCompile 'com.jayway.restassured:spring-mock-mvc:2.5.0'
	testCompile 'io.rest-assured:rest-assured:3.0.1'
	 testCompile 'com.jayway.jsonpath:json-path-assert:0.8.1'
	  testCompile 'org.hamcrest:hamcrest-all:1.3'
	 
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

// Don't use Jetty8, even it's a servlet 3.0+ container,
// but not support non-jar WebApplicationInitializer scanning.
// It will cause "No Spring WebApplicationInitializer types detected on classpath"
gretty {
  port = 8080
  contextPath = '/'
  servletContainer = 'jetty9' //tomcat7 or tomcat8
}

//For Eclipse IDE only
eclipse {

  wtp {
    component {

      //define context path, default to project folder name
      contextPath = '/'

    }

  }
}
